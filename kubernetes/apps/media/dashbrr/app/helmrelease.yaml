---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: dashbrr
spec:
  chartRef:
    kind: OCIRepository
    name: dashbrr
  interval: 1h
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
    controllers:
      dashbrr:
        annotations:
          reloader.stakater.com/auto: "true"
        labels:
          nfsMount: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
        containers:
          dashbrr:
            image:
              repository: ghcr.io/autobrr/dashbrr
              tag: pr-67
              pullPolicy: Always
            env:
              DASHBRR__CONFIG_PATH: /config/config.toml
              DASHBRR__DB_PATH: /cache/._  # cache path is derived from DASHBRR__DB_PATH
              DASHBRR__LISTEN_ADDR: 0.0.0.0:80
              GIN_MODE: debug
              TZ: America/Chicago
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.jonandlinz.io"
        parentRefs:
          - name: envoy-internal
            namespace: network
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    service:
      app:
        ports:
          http:
            port: 80
    rbac:
      roles:
        dashbrr:
          type: ClusterRole
          rules:
            - apiGroups: [""]
              resources: ["services"]
              verbs: ["get","watch","list"]
      bindings:
        dashbrr:
          type: ClusterRoleBinding
          roleRef:
            identifier: dashbrr
          subjects:
            - identifier: dashbrr
    serviceAccount:
      dashbrr: {}
    persistence:
      cache:
        type: emptyDir
        sizeLimit: 1Gi
      config:
        type: configMap
        name: "{{ .Release.Name }}-config"
