---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: dispatcharr
spec:
  chartRef:
    kind: OCIRepository
    name: dispatcharr
  interval: 1h
  values:
    controllers:
      dispatcharr:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
          migrate:
            envFrom: *envFrom
            image: &image
              repository: ghcr.io/dispatcharr/dispatcharr
              tag: 0.10.4@sha256:31242b53f369e82e92d8f5ef53f93d5686c2a8c7fbb486a1fc57d006def13401
            workingDir: /app
            command: bash
            args:
             - -c
             - ". /app/docker/init/03-init-dispatcharr.sh && python manage.py migrate --noinput"
        containers:
          app:
            envFrom: *envFrom
            image: *image
            workingDir: /app
            command: bash
            args:
              - -c
              - |-
                sed -i "s:/app/uwsgi.sock:/tmp/uwsgi.sock:g" /app/docker/uwsgi.ini && \
                sed -i '/^attach-daemon = redis-server/s/^/;/' /app/docker/uwsgi.ini && \
                sed -i '/^attach-daemon = .*celery.*worker.*/s/^/;/' /app/docker/uwsgi.ini && \
                uwsgi --ini /app/docker/uwsgi.ini --disable-logging
            resources:
              claims:
                - name: gpu
              requests:
                cpu: 100m
              limits:
                memory: 4Gi

          celery:
            envFrom: *envFrom
            image: *image
            workingDir: /app
            command: celery
            args: ["-A", "dispatcharr", "worker", "-l", "info"]
            resources:
              limits:
                memory: 4Gi
              requests:
                cpu: 10m
                memory: 512Mi

          nginx:
            envFrom: *envFrom
            image: *image
            command: bash
            args:
            - -c
            - |-
              sed -i "s:/app/uwsgi.sock:/tmp/uwsgi.sock:g" /etc/nginx/sites-enabled/default && \
              sed -i "s/NGINX_PORT/$(DISPATCHARR_PORT)/g" /etc/nginx/sites-enabled/default && \
              nginx -g "daemon off;"


    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      resourceClaims:
        - name: gpu
          resourceClaimTemplateName: dispatcharr-gpu

    service:
      app:
        controller: dispatcharr
        ports:
          http:
            port: 80
            targetPort: 9191
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.jonandlinz.io"
        parentRefs:
          - name: envoy-internal
            namespace: network    persistence:
      data:
        existingClaim: "{{ .Release.Name }}"
      tmp:
        type: emptyDir