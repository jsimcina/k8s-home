---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        labels:
          nfsMount: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/jsimcina/postgres17-init
              tag: 17.2
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: lidarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/jsimcina/lidarr
              tag: 2.9.6.4552@sha256:68e15995de16ec8429afa21c4b0476b0600e475670addafa428fdedb0c427a92
            env:
              LIDARR__AUTHENTICATION_METHOD: External
              LIDARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              TZ: "America/Chicago"
              LIDARR__INSTANCE_NAME: Lidarr
              LIDARR__PORT: &port 80
              LIDARR__THEME: dark
              LIDARR__LOG_LEVEL: info
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media Acquisition
          gethomepage.dev/name: Lidarr
          gethomepage.dev/icon: lidarr.png
          gethomepage.dev/description: Music Downloads
          gethomepage.dev/widget.type: lidarr
          gethomepage.dev/widget.url: http://lidarr.media.svc.cluster.local
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_LIDARR_TOKEN}}` }}"
        hosts:
          - host: &host "{{ .Release.Name }}.jonandlinz.net"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: unraid.jonandlinz.com
        path: /mnt/user/media_server
        globalMounts:
          - path: /media
