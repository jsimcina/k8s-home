---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vernemq
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: vernemq
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      vernemq:
        type: statefulset
        strategy: RollingUpdate
        replicas: 3
        annotations:
          secret.reloader.stakater.com/reload: "{{ .Release.Name }}-secret"
        pod:
          securityContext:
            runAsUser: 10000
            runAsNonRoot: true
        containers:
          app:
            image:
              repository: vernemq/vernemq
              tag: 2.1.1-alpine
            env:
              MY_POD_NAME:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              DOCKER_VERNEMQ_ACCEPT_EULA: "yes"
              DOCKER_VERNEMQ_DISCOVERY_KUBERNETES: 1
              DOCKER_VERNEMQ_KUBERNETES_LABEL_SELECTOR: "app.kubernetes.io/name=vernemq"
              DOCKER_VERNEMQ_LEVELDB__MAXIMUM_MEMORY: '256000000' # in bytes
              DOCKER_VERNEMQ_LEVELDB__WRITE_BUFFER_SIZE_MIN: '2097152'
              DOCKER_VERNEMQ_LEVELDB__WRITE_BUFFER_SIZE_MAX: '4194304'
              # allow clients to failover when pods are restarting
              DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_PUBLISH_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_SUBSCRIBE_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_UNSUBSCRIBE_DURING_NETSPLIT: 'on'
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/ping
                    port: &http 8888
                  periodSeconds: 10
                  timeoutSeconds: 5
              readiness: *probes
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
    service:
      app:
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "mqtt.jonandlinz.io"
          lbipam.cilium.io/ips: 10.12.0.105
        ports:
          mqtt:
            port: 1883
          ws:
            port: 8080
      headless:
        forceRename: "{{ .Release.Name }}" # TODO: Fix this when app-template 4.1.0 is released
        publishNotReadyAddresses: true
        clusterIP: None
        ports:
          mqtt:
            port: 1883
          ws:
            port: 8080
      http:
        ports:
          http:
            port: *http
    serviceMonitor:
      metrics:
        enabled: true
        serviceName: "{{ .Release.Name }}"
        endpoints:
          - port: metrics
            scheme: http
            path: /status.json
            interval: 1m
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.jonandlinz.io"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - matches:
              - path:
                  value: /status.json
            backendRefs: &backendRefs
              - identifier: http
                port: *http
          - matches:
              - path:
                  type: PathPrefix
                  value: /status
            backendRefs: *backendRefs
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs: *backendRefs
            filters:
              - type: URLRewrite
                urlRewrite:
                  path:
                    type: ReplacePrefixMatch
                    replacePrefixMatch: /status
    persistence:
      data:
        type: emptyDir
        globalMounts:
          - path: /vernemq/data
      log:
        type: emptyDir
        globalMounts:
          - path: /vernemq/log
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
    serviceAccount:
      vernemq: {}

    rbac:
      roles:
        vernemq:
          type: Role
          rules:
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
                - list
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - get
      bindings:
        vernemq:
          type: RoleBinding
          roleRef:
            identifier: vernemq
          subjects:
            - identifier: vernemq