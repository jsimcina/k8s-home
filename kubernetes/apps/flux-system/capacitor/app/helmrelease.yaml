---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: capacitor
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      capacitor:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/gimlet-io/capacitor
              tag: v0.4.8@sha256:c999a42cccc523b91086547f890466d09be4755bf05a52763b0d14594bf60782
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
                ephemeral-storage: 1Gi
              limits:
                memory: 1Gi
                ephemeral-storage: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: [ALL]}
    rbac:
      roles:
        capacitor:
          type: ClusterRole
          rules:
            - apiGroups: ["networking.k8s.io","apps",""]
              resources: ["pods","pods/log","ingresses","deployments","services","secrets","events","configmaps"]
              verbs: ["get","watch","list"]
            - apiGroups: ["source.toolkit.fluxcd.io","kustomize.toolkit.fluxcd.io","helm.toolkit.fluxcd.io","infra.contrib.fluxcd.io"]
              resources: ["gitrepositories","ocirepositories","buckets","helmrepositories","helmcharts","kustomizations","helmreleases","terraforms"]
              verbs: ["get","watch","list","patch"]
      bindings:
        capacitor:
          type: ClusterRoleBinding
          roleRef:
            kind: ClusterRole
            name: capacitor
          subjects:
            - identifier: capacitor
    serviceAccount:
      capacitor: {}
    service:
      app:
        ports:
          http:
            enabled: true
            port: &port 9000
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.jonandlinz.io"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
