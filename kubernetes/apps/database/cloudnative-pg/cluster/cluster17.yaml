---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname
    podAntiAffinityType: required
    additionalPodAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: nodatabase
                operator: Exists
          topologyKey: "kubernetes.io/hostname"
  enableSuperuserAccess: true
  instances: 3
  imageName: ghcr.io/cloudnative-pg/tensorchord/cloudnative-vectorchord:${POSTGRESQL_VERSION}
  monitoring:
    enablePodMonitor: true
  plugins:
    - enabled: true
      isWALArchiver: true
      name: barman-cloud.cloudnative-pg.io
      parameters: &barmanParameters
        barmanObjectName: cfr2
        serverName: postgres18
  postgresql:
    parameters:
      max_connections: "600"
    shared_preload_libraries:
      - "vchord.so"
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  resources:
    requests:
      cpu: 500m
    limits:
      memory: 8Gi
  storage:
    size: 25Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  bootstrap:
    recovery:
      source: &previousCluster postgres17-v1
  #Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: cfr2
        serverName: *previousCluster
#  externalClusters:
#    - name: source
#      plugin:
#        enabled: true
#        isWALArchiver: false
#        name: barman-cloud.cloudnative-pg.io
#        parameters: *barmanParameters