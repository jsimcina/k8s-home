---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname
    podAntiAffinityType: required
    additionalPodAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: nodatabase
                operator: Exists
          topologyKey: "kubernetes.io/hostname"
  enableSuperuserAccess: true
  instances: 3
  # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql
  imageName: ghcr.io/cloudnative-pg/postgresql:18
  monitoring:
    enablePodMonitor: true
  plugins:
    - enabled: true
      isWALArchiver: true
      name: barman-cloud.cloudnative-pg.io
      parameters: &barmanParameters
        barmanObjectName: cfr2
        serverName: postgres18
  postgresql:
    parameters:
      max_connections: "600"
    extensions:
      - name: vchord
        image:
          reference: ghcr.io/tensorchord/vchord-scratch:pg18-v0.5.3
          dynamic_library_path:
            - /usr/lib/postgresql/18/lib
          extension_control_path:
            - /usr/share/postgresql/18/
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  resources:
    requests:
      cpu: 500m
    limits:
      memory: 8Gi
  storage:
    size: 25Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  # bootstrap:
  #   recovery:
  #     source: postgres17-v2
  # externalClusters:
  #   - name: postgres17-v2
  #     plugin:
  #       enabled: true
  #       isWALArchiver: true
  #       name: barman-cloud.cloudnative-pg.io
  #       parameters:
  #         barmanObjectName: cfr2
  #         serverName: postgres17-v2