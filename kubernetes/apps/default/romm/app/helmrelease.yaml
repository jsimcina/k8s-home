---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: romm
spec:
  chartRef:
    kind: OCIRepository
    name: romm
  interval: 1h
  values:
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"
        labels:
          nfsMount: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 4.3.2@sha256:1895c339b3c7ca62d52f809f5e4c747d78fc8291ea5ee88b3b57df84acf33449
            env:
              TZ: America/Chicago
              romm__PORT: &port 8080
            envFrom: *envFrom
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
                spec:
                  periodSeconds: 10
                  failureThreshold: 3
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.jonandlinz.io"
        parentRefs:
          - name: envoy-internal
            namespace: network
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      assets:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /romm/assets
            readOnly: false
      resources:
        existingClaim: "{{ .Release.Name }}-resources"
        globalMounts:
          - path: /romm/resources
            readOnly: false
      config:
        type: configMap
        name: "{{ .Release.Name }}-config"
        globalMounts:
          - path: /romm/config/config.yml
            subPath: config.yml
      media:
        type: nfs
        server: nas.jonandlinz.com
        path: /mnt/rustpool/media_server/media/roms
        globalMounts:
          - path: /romm/library
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
